worker_processes 1;
error_log stderr notice;
daemon off;
events {
    worker_connections 1024;
}

http {
    variables_hash_max_size 1024;
    access_log /dev/stdout;
    include /usr/local/openresty/nginx/conf/mime.types;

    charset utf-8;

    server {
        listen 80;
        lua_code_cache on;

        access_by_lua_file 'access.lua';

        error_page 401 /401;
        error_page 404 /404;

        location /login {
            if ($request_method = POST ) {
                content_by_lua_file 'authenticate.lua';
            }

            proxy_pass        http://localhost:8081;

            proxy_set_header  Host             $http_host;
            proxy_set_header  X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /logout {
            content_by_lua_file 'logout.lua';
        }

        location /api/authentication {
            proxy_pass        http://localhost:8082;

            proxy_set_header  Host             $http_host;
            proxy_set_header  X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /api/sessions {
            proxy_pass        http://localhost:8084;

            proxy_set_header  Host             $http_host;
            proxy_set_header  X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /api/persons {
            proxy_pass        http://localhost:8085;

            proxy_set_header  Host             $http_host;
            proxy_set_header  X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location / {
            proxy_pass        http://localhost:8081;

            proxy_set_header  Host             $http_host;
            proxy_set_header  X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
        }
    }
}
